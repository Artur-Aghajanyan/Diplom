{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport assertString from './util/assertString';\nimport toString from './util/toString';\nexport default function isIn(str, options) {\n  assertString(str);\n  var i;\n\n  if (Object.prototype.toString.call(options) === '[object Array]') {\n    var array = [];\n\n    for (i in options) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if ({}.hasOwnProperty.call(options, i)) {\n        array[i] = toString(options[i]);\n      }\n    }\n\n    return array.indexOf(str) >= 0;\n  } else if (_typeof(options) === 'object') {\n    return options.hasOwnProperty(str);\n  } else if (options && typeof options.indexOf === 'function') {\n    return options.indexOf(str) >= 0;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/isIn.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","assertString","toString","isIn","str","options","i","Object","call","array","hasOwnProperty","indexOf"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;;AAA2B,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE1X,OAAOK,YAAP,MAAyB,qBAAzB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,eAAe,SAASC,IAAT,CAAcC,GAAd,EAAmBC,OAAnB,EAA4B;AACzCJ,EAAAA,YAAY,CAACG,GAAD,CAAZ;AACA,MAAIE,CAAJ;;AAEA,MAAIC,MAAM,CAACP,SAAP,CAAiBE,QAAjB,CAA0BM,IAA1B,CAA+BH,OAA/B,MAA4C,gBAAhD,EAAkE;AAChE,QAAII,KAAK,GAAG,EAAZ;;AAEA,SAAKH,CAAL,IAAUD,OAAV,EAAmB;AACjB;AACA;AACA,UAAI,GAAGK,cAAH,CAAkBF,IAAlB,CAAuBH,OAAvB,EAAgCC,CAAhC,CAAJ,EAAwC;AACtCG,QAAAA,KAAK,CAACH,CAAD,CAAL,GAAWJ,QAAQ,CAACG,OAAO,CAACC,CAAD,CAAR,CAAnB;AACD;AACF;;AAED,WAAOG,KAAK,CAACE,OAAN,CAAcP,GAAd,KAAsB,CAA7B;AACD,GAZD,MAYO,IAAIT,OAAO,CAACU,OAAD,CAAP,KAAqB,QAAzB,EAAmC;AACxC,WAAOA,OAAO,CAACK,cAAR,CAAuBN,GAAvB,CAAP;AACD,GAFM,MAEA,IAAIC,OAAO,IAAI,OAAOA,OAAO,CAACM,OAAf,KAA2B,UAA1C,EAAsD;AAC3D,WAAON,OAAO,CAACM,OAAR,CAAgBP,GAAhB,KAAwB,CAA/B;AACD;;AAED,SAAO,KAAP;AACD","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport assertString from './util/assertString';\nimport toString from './util/toString';\nexport default function isIn(str, options) {\n  assertString(str);\n  var i;\n\n  if (Object.prototype.toString.call(options) === '[object Array]') {\n    var array = [];\n\n    for (i in options) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if ({}.hasOwnProperty.call(options, i)) {\n        array[i] = toString(options[i]);\n      }\n    }\n\n    return array.indexOf(str) >= 0;\n  } else if (_typeof(options) === 'object') {\n    return options.hasOwnProperty(str);\n  } else if (options && typeof options.indexOf === 'function') {\n    return options.indexOf(str) >= 0;\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"module"}