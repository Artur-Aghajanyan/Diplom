{"ast":null,"code":"import _regeneratorRuntime from \"/home/artur97/Diplomayin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/artur97/Diplomayin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// eslint-disable-next-line no-undef\nvar url = \"http://localhost:\".concat(process.env.PORT || 7000); // User part\n\nexport var postUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(url, \"/api/user/create\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                user: user\n              })\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function postUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getUser = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(user) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"\".concat(url, \"/api/user\"), {\n              method: \"GET\",\n              headers: {\n                email: user.email,\n                password: user.password,\n                \"Content-Type\": \"application/json\"\n              }\n            });\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getUser(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // export const updateUser = async (user) => {\n//   return await fetch(`${url}/api/quiz/`, {\n//     method: \"PUT\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify({\n//       name: user.name,\n//       surname: user.surname,\n//       email: user.email,\n//       password: user.password,\n//       id: user.id,\n//     })\n//   })\n//     .then(res => res.json()).then(json => json).catch(err => err);\n// }\n\nexport var resetUserName = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(user) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"\".concat(url, \"/api/user/name\"), {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                name: user.name,\n                id: user.id\n              })\n            });\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function resetUserName(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var resetUserSurname = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(user) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetch(\"\".concat(url, \"/api/user/surname\"), {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                surname: user.surname,\n                id: user.id\n              })\n            });\n\n          case 2:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function resetUserSurname(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var resetUserPassword = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(user) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(\"\".concat(url, \"/api/user/password\"), {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                password: user.password,\n                id: user.id\n              })\n            });\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function resetUserPassword(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var destroyUser = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(userId) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return fetch(\"\".concat(url, \"/api/quiz/destroy/\"), {\n              method: \"DELETE\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                id: userId\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              return json;\n            }).catch(function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function destroyUser(_x6) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/src/api.js"],"names":["url","process","env","PORT","postUser","user","fetch","method","headers","body","JSON","stringify","getUser","email","password","resetUserName","name","id","resetUserSurname","surname","resetUserPassword","destroyUser","userId","then","res","json","catch","err"],"mappings":"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","sourcesContent":["// eslint-disable-next-line no-undef\nconst url = `http://localhost:${process.env.PORT || 7000}`\n\n// User part\nexport const postUser = async (user) => {\n  return await fetch(`${url}/api/user/create`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      user\n    })\n  })\n}\n\nexport const getUser = async (user) => {\n  return await fetch(`${url}/api/user`, {\n    method: \"GET\",\n    headers: {\n      email: user.email,\n      password: user.password,\n      \"Content-Type\": \"application/json\",\n    }\n  })\n}\n\n// export const updateUser = async (user) => {\n//   return await fetch(`${url}/api/quiz/`, {\n//     method: \"PUT\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify({\n//       name: user.name,\n//       surname: user.surname,\n//       email: user.email,\n//       password: user.password,\n//       id: user.id,\n//     })\n//   })\n//     .then(res => res.json()).then(json => json).catch(err => err);\n// }\nexport const resetUserName = async (user) => {\n  return await fetch(`${url}/api/user/name`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      name: user.name,\n      id: user.id\n    })\n  })\n}\nexport const resetUserSurname = async (user) => {\n  return await fetch(`${url}/api/user/surname`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      surname: user.surname,\n      id: user.id\n    })\n  })\n}\nexport const resetUserPassword = async (user) => {\n  return await fetch(`${url}/api/user/password`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: user.password,\n      id: user.id\n    })\n  })\n}\n\nexport const destroyUser = async (userId) => {\n  return await fetch(`${url}/api/quiz/destroy/`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      id: userId\n    })\n  })\n    .then(res => res.json()).then(json => json).catch(err => err);\n}\n"]},"metadata":{},"sourceType":"module"}