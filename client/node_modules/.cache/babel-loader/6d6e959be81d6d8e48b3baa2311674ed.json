{"ast":null,"code":"import assertString from './util/assertString';\nvar uuid = {\n  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n};\nexport default function isUUID(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';\n  assertString(str);\n  var pattern = uuid[version];\n  return pattern && pattern.test(str);\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/isUUID.js"],"names":["assertString","uuid","all","isUUID","str","version","arguments","length","undefined","pattern","test"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,IAAIC,IAAI,GAAG;AACT,KAAG,kEADM;AAET,KAAG,wEAFM;AAGT,KAAG,wEAHM;AAITC,EAAAA,GAAG,EAAE;AAJI,CAAX;AAMA,eAAe,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AAClC,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAlF;AACAN,EAAAA,YAAY,CAACI,GAAD,CAAZ;AACA,MAAIK,OAAO,GAAGR,IAAI,CAACI,OAAD,CAAlB;AACA,SAAOI,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaN,GAAb,CAAlB;AACD","sourcesContent":["import assertString from './util/assertString';\nvar uuid = {\n  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n};\nexport default function isUUID(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';\n  assertString(str);\n  var pattern = uuid[version];\n  return pattern && pattern.test(str);\n}"]},"metadata":{},"sourceType":"module"}