{"ast":null,"code":"import _regeneratorRuntime from \"/home/artur97/Diplomayin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/artur97/Diplomayin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// eslint-disable-next-line no-undef\nvar url = \"http://localhost:\".concat(process.env.PORT || 7000); // Create User part\n\nexport var postUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(url, \"/api/quiz\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                user: user\n              })\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function postUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getQuizzes = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"\".concat(url, \"/api/quizzes\"), {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              return json;\n            }).catch(function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getQuizzes() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var updateQuiz = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(quizId, value) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"\".concat(url, \"/api/quiz/\"), {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                id: quizId,\n                name: value\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              return json;\n            }).catch(function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function updateQuiz(_x2, _x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var destroyQuiz = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(quizId) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetch(\"\".concat(url, \"/api/quiz/destroy/\"), {\n              method: \"DELETE\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                id: quizId\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              return json;\n            }).catch(function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function destroyQuiz(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}(); // Question part\n\nexport var getQuestions = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(quizId) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(\"\".concat(url, \"/api/questions\"), {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                quizId: quizId\n              }\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              return json;\n            }).catch(function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getQuestions(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var postQuestion = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(question) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return fetch(\"\".concat(url, \"/api/question/\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                name: question.name,\n                typeAnswer: question.typeAnswer,\n                quizId: question.quizId\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              return json;\n            }).catch(function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function postQuestion(_x6) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var destroyQuestion = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(questionId) {\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return fetch(\"\".concat(url, \"/api/question/destroy/\"), {\n              method: \"DELETE\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                id: questionId\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              return json;\n            }).catch(function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context7.abrupt(\"return\", _context7.sent);\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function destroyQuestion(_x7) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var updateQuestion = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(question) {\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return fetch(\"\".concat(url, \"/api/question/\"), {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                question: question\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              return json;\n            }).catch(function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context8.abrupt(\"return\", _context8.sent);\n\n          case 3:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function updateQuestion(_x8) {\n    return _ref8.apply(this, arguments);\n  };\n}(); // Answer part\n\nexport var postAnswer = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(answer) {\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return fetch(\"\".concat(url, \"/api/answer/\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                name: answer.name,\n                trueAnswer: answer.trueAnswer,\n                questionId: answer.questionId\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              return json;\n            }).catch(function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context9.abrupt(\"return\", _context9.sent);\n\n          case 3:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function postAnswer(_x9) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nexport var getAnswers = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(questionId) {\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return fetch(\"\".concat(url, \"/api/answers\"), {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                question_id: questionId\n              }\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              return json;\n            }).catch(function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context10.abrupt(\"return\", _context10.sent);\n\n          case 3:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function getAnswers(_x10) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nexport var destroyAnswer = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(questionId) {\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return fetch(\"\".concat(url, \"/api/answers/destroy/\"), {\n              method: \"DELETE\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                questionId: questionId\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              return json;\n            }).catch(function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context11.abrupt(\"return\", _context11.sent);\n\n          case 3:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function destroyAnswer(_x11) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nexport var updateAnswers = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(answer) {\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return fetch(\"\".concat(url, \"/api/answer/\"), {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                name: answer.name,\n                trueAnswer: answer.trueAnswer,\n                questionId: answer.questionId,\n                id: answer.id\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              return json;\n            }).catch(function (err) {\n              return err;\n            });\n\n          case 2:\n            return _context12.abrupt(\"return\", _context12.sent);\n\n          case 3:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function updateAnswers(_x12) {\n    return _ref12.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/src/api.js"],"names":["url","process","env","PORT","postUser","user","fetch","method","headers","body","JSON","stringify","getQuizzes","then","res","json","catch","err","updateQuiz","quizId","value","id","name","destroyQuiz","getQuestions","postQuestion","question","typeAnswer","destroyQuestion","questionId","updateQuestion","postAnswer","answer","trueAnswer","getAnswers","question_id","destroyAnswer","updateAnswers"],"mappings":"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","sourcesContent":["// eslint-disable-next-line no-undef\nconst url = `http://localhost:${process.env.PORT || 7000}`\n\n// Create User part\nexport const postUser = async (user) => {\n    return await fetch(`${url}/api/quiz`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            user\n        })\n    })\n}\n\nexport const getQuizzes = async () => {\n    return await fetch(`${url}/api/quizzes`, {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        }\n    })\n        .then(res => res.json()).then(json => json).catch(err => err);\n}\n\nexport const updateQuiz = async (quizId, value) => {\n    return await fetch(`${url}/api/quiz/`, {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            id: quizId,\n            name: value\n        })\n    })\n        .then(res => res.json()).then(json => json).catch(err => err);\n}\n\nexport const destroyQuiz = async (quizId) => {\n    return await fetch(`${url}/api/quiz/destroy/`, {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            id: quizId\n        })\n    })\n        .then(res => res.json()).then(json => json).catch(err => err);\n}\n\n// Question part\nexport const getQuestions = async (quizId) => {\n    return await fetch(`${url}/api/questions`, {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            quizId: quizId\n        }\n    })\n        .then(res => res.json()).then(json => json).catch(err => err);\n}\n\nexport const postQuestion = async (question) => {\n    return await fetch(`${url}/api/question/`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            name: question.name,\n            typeAnswer: question.typeAnswer,\n            quizId: question.quizId,\n        })\n    })\n        .then(res => res.json()).then(json => json).catch(err => err);\n}\n\nexport const destroyQuestion = async (questionId) => {\n    return await fetch(`${url}/api/question/destroy/`, {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            id: questionId\n        })\n    })\n        .then(res => res.json()).then(json => json).catch(err => err);\n}\n\nexport const updateQuestion = async (question) => {\n    return await fetch(`${url}/api/question/`, {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            question\n        })\n    })\n        .then(res => res.json()).then(json => json).catch(err => err);\n}\n\n// Answer part\nexport const postAnswer = async (answer) => {\n    return await fetch(`${url}/api/answer/`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            name: answer.name,\n            trueAnswer: answer.trueAnswer,\n            questionId: answer.questionId,\n        })\n    })\n        .then(res => res.json()).then(json => json).catch(err => err);\n}\n\nexport const getAnswers = async (questionId) => {\n    return await fetch(`${url}/api/answers`, {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            question_id: questionId\n        }\n    })\n        .then(res => res.json()).then(json => json).catch(err => err);\n}\nexport const destroyAnswer = async (questionId) => {\n    return await fetch(`${url}/api/answers/destroy/`, {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            questionId\n        })\n    })\n        .then(res => res.json()).then(json => json).catch(err => err);\n}\n\nexport const updateAnswers = async (answer) => {\n    return await fetch(`${url}/api/answer/`, {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            name: answer.name,\n            trueAnswer: answer.trueAnswer,\n            questionId: answer.questionId,\n            id: answer.id\n        })\n    })\n        .then(res => res.json()).then(json => json).catch(err => err);\n}\n"]},"metadata":{},"sourceType":"module"}