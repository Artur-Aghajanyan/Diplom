{"ast":null,"code":"import assertString from './util/assertString';\n/* eslint-disable max-len */\n\nvar creditCard = /^(?:4[0-9]{12}(?:[0-9]{3,6})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12,15}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|6[27][0-9]{14})$/;\n/* eslint-enable max-len */\n\nexport default function isCreditCard(str) {\n  assertString(str);\n  var sanitized = str.replace(/[- ]+/g, '');\n\n  if (!creditCard.test(sanitized)) {\n    return false;\n  }\n\n  var sum = 0;\n  var digit;\n  var tmpNum;\n  var shouldDouble;\n\n  for (var i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n\n    if (shouldDouble) {\n      tmpNum *= 2;\n\n      if (tmpNum >= 10) {\n        sum += tmpNum % 10 + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n\n    shouldDouble = !shouldDouble;\n  }\n\n  return !!(sum % 10 === 0 ? sanitized : false);\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/isCreditCard.js"],"names":["assertString","creditCard","isCreditCard","str","sanitized","replace","test","sum","digit","tmpNum","shouldDouble","i","length","substring","parseInt"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA;;AAEA,IAAIC,UAAU,GAAG,4OAAjB;AACA;;AAEA,eAAe,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACxCH,EAAAA,YAAY,CAACG,GAAD,CAAZ;AACA,MAAIC,SAAS,GAAGD,GAAG,CAACE,OAAJ,CAAY,QAAZ,EAAsB,EAAtB,CAAhB;;AAEA,MAAI,CAACJ,UAAU,CAACK,IAAX,CAAgBF,SAAhB,CAAL,EAAiC;AAC/B,WAAO,KAAP;AACD;;AAED,MAAIG,GAAG,GAAG,CAAV;AACA,MAAIC,KAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,YAAJ;;AAEA,OAAK,IAAIC,CAAC,GAAGP,SAAS,CAACQ,MAAV,GAAmB,CAAhC,EAAmCD,CAAC,IAAI,CAAxC,EAA2CA,CAAC,EAA5C,EAAgD;AAC9CH,IAAAA,KAAK,GAAGJ,SAAS,CAACS,SAAV,CAAoBF,CAApB,EAAuBA,CAAC,GAAG,CAA3B,CAAR;AACAF,IAAAA,MAAM,GAAGK,QAAQ,CAACN,KAAD,EAAQ,EAAR,CAAjB;;AAEA,QAAIE,YAAJ,EAAkB;AAChBD,MAAAA,MAAM,IAAI,CAAV;;AAEA,UAAIA,MAAM,IAAI,EAAd,EAAkB;AAChBF,QAAAA,GAAG,IAAIE,MAAM,GAAG,EAAT,GAAc,CAArB;AACD,OAFD,MAEO;AACLF,QAAAA,GAAG,IAAIE,MAAP;AACD;AACF,KARD,MAQO;AACLF,MAAAA,GAAG,IAAIE,MAAP;AACD;;AAEDC,IAAAA,YAAY,GAAG,CAACA,YAAhB;AACD;;AAED,SAAO,CAAC,EAAEH,GAAG,GAAG,EAAN,KAAa,CAAb,GAAiBH,SAAjB,GAA6B,KAA/B,CAAR;AACD","sourcesContent":["import assertString from './util/assertString';\n/* eslint-disable max-len */\n\nvar creditCard = /^(?:4[0-9]{12}(?:[0-9]{3,6})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12,15}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|6[27][0-9]{14})$/;\n/* eslint-enable max-len */\n\nexport default function isCreditCard(str) {\n  assertString(str);\n  var sanitized = str.replace(/[- ]+/g, '');\n\n  if (!creditCard.test(sanitized)) {\n    return false;\n  }\n\n  var sum = 0;\n  var digit;\n  var tmpNum;\n  var shouldDouble;\n\n  for (var i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n\n    if (shouldDouble) {\n      tmpNum *= 2;\n\n      if (tmpNum >= 10) {\n        sum += tmpNum % 10 + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n\n    shouldDouble = !shouldDouble;\n  }\n\n  return !!(sum % 10 === 0 ? sanitized : false);\n}"]},"metadata":{},"sourceType":"module"}