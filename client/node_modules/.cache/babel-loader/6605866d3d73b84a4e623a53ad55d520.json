{"ast":null,"code":"import assertString from './util/assertString';\nvar base32 = /^[A-Z2-7]+=*$/;\nexport default function isBase32(str) {\n  assertString(str);\n  var len = str.length;\n\n  if (len % 8 === 0 && base32.test(str)) {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/isBase32.js"],"names":["assertString","base32","isBase32","str","len","length","test"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,IAAIC,MAAM,GAAG,eAAb;AACA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACpCH,EAAAA,YAAY,CAACG,GAAD,CAAZ;AACA,MAAIC,GAAG,GAAGD,GAAG,CAACE,MAAd;;AAEA,MAAID,GAAG,GAAG,CAAN,KAAY,CAAZ,IAAiBH,MAAM,CAACK,IAAP,CAAYH,GAAZ,CAArB,EAAuC;AACrC,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD","sourcesContent":["import assertString from './util/assertString';\nvar base32 = /^[A-Z2-7]+=*$/;\nexport default function isBase32(str) {\n  assertString(str);\n  var len = str.length;\n\n  if (len % 8 === 0 && base32.test(str)) {\n    return true;\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"module"}