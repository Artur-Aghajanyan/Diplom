{"ast":null,"code":"import assertString from './util/assertString';\nvar lengths = {\n  md5: 32,\n  md4: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8\n};\nexport default function isHash(str, algorithm) {\n  assertString(str);\n  var hash = new RegExp(\"^[a-fA-F0-9]{\".concat(lengths[algorithm], \"}$\"));\n  return hash.test(str);\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/isHash.js"],"names":["assertString","lengths","md5","md4","sha1","sha256","sha384","sha512","ripemd128","ripemd160","tiger128","tiger160","tiger192","crc32","crc32b","isHash","str","algorithm","hash","RegExp","concat","test"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,IAAIC,OAAO,GAAG;AACZC,EAAAA,GAAG,EAAE,EADO;AAEZC,EAAAA,GAAG,EAAE,EAFO;AAGZC,EAAAA,IAAI,EAAE,EAHM;AAIZC,EAAAA,MAAM,EAAE,EAJI;AAKZC,EAAAA,MAAM,EAAE,EALI;AAMZC,EAAAA,MAAM,EAAE,GANI;AAOZC,EAAAA,SAAS,EAAE,EAPC;AAQZC,EAAAA,SAAS,EAAE,EARC;AASZC,EAAAA,QAAQ,EAAE,EATE;AAUZC,EAAAA,QAAQ,EAAE,EAVE;AAWZC,EAAAA,QAAQ,EAAE,EAXE;AAYZC,EAAAA,KAAK,EAAE,CAZK;AAaZC,EAAAA,MAAM,EAAE;AAbI,CAAd;AAeA,eAAe,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,SAArB,EAAgC;AAC7CjB,EAAAA,YAAY,CAACgB,GAAD,CAAZ;AACA,MAAIE,IAAI,GAAG,IAAIC,MAAJ,CAAW,gBAAgBC,MAAhB,CAAuBnB,OAAO,CAACgB,SAAD,CAA9B,EAA2C,IAA3C,CAAX,CAAX;AACA,SAAOC,IAAI,CAACG,IAAL,CAAUL,GAAV,CAAP;AACD","sourcesContent":["import assertString from './util/assertString';\nvar lengths = {\n  md5: 32,\n  md4: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8\n};\nexport default function isHash(str, algorithm) {\n  assertString(str);\n  var hash = new RegExp(\"^[a-fA-F0-9]{\".concat(lengths[algorithm], \"}$\"));\n  return hash.test(str);\n}"]},"metadata":{},"sourceType":"module"}