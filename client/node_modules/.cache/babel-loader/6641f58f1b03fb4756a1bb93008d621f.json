{"ast":null,"code":"import assertString from './util/assertString';\nvar validMediaType = /^[a-z]+\\/[a-z0-9\\-\\+]+$/i;\nvar validAttribute = /^[a-z\\-]+=[a-z0-9\\-]+$/i;\nvar validData = /^[a-z0-9!\\$&'\\(\\)\\*\\+,;=\\-\\._~:@\\/\\?%\\s]*$/i;\nexport default function isDataURI(str) {\n  assertString(str);\n  var data = str.split(',');\n\n  if (data.length < 2) {\n    return false;\n  }\n\n  var attributes = data.shift().trim().split(';');\n  var schemeAndMediaType = attributes.shift();\n\n  if (schemeAndMediaType.substr(0, 5) !== 'data:') {\n    return false;\n  }\n\n  var mediaType = schemeAndMediaType.substr(5);\n\n  if (mediaType !== '' && !validMediaType.test(mediaType)) {\n    return false;\n  }\n\n  for (var i = 0; i < attributes.length; i++) {\n    if (!(i === attributes.length - 1 && attributes[i].toLowerCase() === 'base64') && !validAttribute.test(attributes[i])) {\n      return false;\n    }\n  }\n\n  for (var _i = 0; _i < data.length; _i++) {\n    if (!validData.test(data[_i])) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/isDataURI.js"],"names":["assertString","validMediaType","validAttribute","validData","isDataURI","str","data","split","length","attributes","shift","trim","schemeAndMediaType","substr","mediaType","test","i","toLowerCase","_i"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,IAAIC,cAAc,GAAG,0BAArB;AACA,IAAIC,cAAc,GAAG,yBAArB;AACA,IAAIC,SAAS,GAAG,6CAAhB;AACA,eAAe,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACrCL,EAAAA,YAAY,CAACK,GAAD,CAAZ;AACA,MAAIC,IAAI,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAX;;AAEA,MAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnB,WAAO,KAAP;AACD;;AAED,MAAIC,UAAU,GAAGH,IAAI,CAACI,KAAL,GAAaC,IAAb,GAAoBJ,KAApB,CAA0B,GAA1B,CAAjB;AACA,MAAIK,kBAAkB,GAAGH,UAAU,CAACC,KAAX,EAAzB;;AAEA,MAAIE,kBAAkB,CAACC,MAAnB,CAA0B,CAA1B,EAA6B,CAA7B,MAAoC,OAAxC,EAAiD;AAC/C,WAAO,KAAP;AACD;;AAED,MAAIC,SAAS,GAAGF,kBAAkB,CAACC,MAAnB,CAA0B,CAA1B,CAAhB;;AAEA,MAAIC,SAAS,KAAK,EAAd,IAAoB,CAACb,cAAc,CAACc,IAAf,CAAoBD,SAApB,CAAzB,EAAyD;AACvD,WAAO,KAAP;AACD;;AAED,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,UAAU,CAACD,MAA/B,EAAuCQ,CAAC,EAAxC,EAA4C;AAC1C,QAAI,EAAEA,CAAC,KAAKP,UAAU,CAACD,MAAX,GAAoB,CAA1B,IAA+BC,UAAU,CAACO,CAAD,CAAV,CAAcC,WAAd,OAAgC,QAAjE,KAA8E,CAACf,cAAc,CAACa,IAAf,CAAoBN,UAAU,CAACO,CAAD,CAA9B,CAAnF,EAAuH;AACrH,aAAO,KAAP;AACD;AACF;;AAED,OAAK,IAAIE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGZ,IAAI,CAACE,MAA3B,EAAmCU,EAAE,EAArC,EAAyC;AACvC,QAAI,CAACf,SAAS,CAACY,IAAV,CAAeT,IAAI,CAACY,EAAD,CAAnB,CAAL,EAA+B;AAC7B,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["import assertString from './util/assertString';\nvar validMediaType = /^[a-z]+\\/[a-z0-9\\-\\+]+$/i;\nvar validAttribute = /^[a-z\\-]+=[a-z0-9\\-]+$/i;\nvar validData = /^[a-z0-9!\\$&'\\(\\)\\*\\+,;=\\-\\._~:@\\/\\?%\\s]*$/i;\nexport default function isDataURI(str) {\n  assertString(str);\n  var data = str.split(',');\n\n  if (data.length < 2) {\n    return false;\n  }\n\n  var attributes = data.shift().trim().split(';');\n  var schemeAndMediaType = attributes.shift();\n\n  if (schemeAndMediaType.substr(0, 5) !== 'data:') {\n    return false;\n  }\n\n  var mediaType = schemeAndMediaType.substr(5);\n\n  if (mediaType !== '' && !validMediaType.test(mediaType)) {\n    return false;\n  }\n\n  for (var i = 0; i < attributes.length; i++) {\n    if (!(i === attributes.length - 1 && attributes[i].toLowerCase() === 'base64') && !validAttribute.test(attributes[i])) {\n      return false;\n    }\n  }\n\n  for (var _i = 0; _i < data.length; _i++) {\n    if (!validData.test(data[_i])) {\n      return false;\n    }\n  }\n\n  return true;\n}"]},"metadata":{},"sourceType":"module"}