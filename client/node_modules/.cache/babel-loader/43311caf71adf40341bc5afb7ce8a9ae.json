{"ast":null,"code":"import assertString from './util/assertString';\nvar issn = '^\\\\d{4}-?\\\\d{3}[\\\\dX]$';\nexport default function isISSN(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  assertString(str);\n  var testIssn = issn;\n  testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;\n  testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');\n\n  if (!testIssn.test(str)) {\n    return false;\n  }\n\n  var digits = str.replace('-', '').toUpperCase();\n  var checksum = 0;\n\n  for (var i = 0; i < digits.length; i++) {\n    var digit = digits[i];\n    checksum += (digit === 'X' ? 10 : +digit) * (8 - i);\n  }\n\n  return checksum % 11 === 0;\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/isISSN.js"],"names":["assertString","issn","isISSN","str","options","arguments","length","undefined","testIssn","require_hyphen","replace","case_sensitive","RegExp","test","digits","toUpperCase","checksum","i","digit"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,IAAIC,IAAI,GAAG,wBAAX;AACA,eAAe,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AAClC,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACAL,EAAAA,YAAY,CAACG,GAAD,CAAZ;AACA,MAAIK,QAAQ,GAAGP,IAAf;AACAO,EAAAA,QAAQ,GAAGJ,OAAO,CAACK,cAAR,GAAyBD,QAAQ,CAACE,OAAT,CAAiB,GAAjB,EAAsB,EAAtB,CAAzB,GAAqDF,QAAhE;AACAA,EAAAA,QAAQ,GAAGJ,OAAO,CAACO,cAAR,GAAyB,IAAIC,MAAJ,CAAWJ,QAAX,CAAzB,GAAgD,IAAII,MAAJ,CAAWJ,QAAX,EAAqB,GAArB,CAA3D;;AAEA,MAAI,CAACA,QAAQ,CAACK,IAAT,CAAcV,GAAd,CAAL,EAAyB;AACvB,WAAO,KAAP;AACD;;AAED,MAAIW,MAAM,GAAGX,GAAG,CAACO,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,EAAqBK,WAArB,EAAb;AACA,MAAIC,QAAQ,GAAG,CAAf;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACR,MAA3B,EAAmCW,CAAC,EAApC,EAAwC;AACtC,QAAIC,KAAK,GAAGJ,MAAM,CAACG,CAAD,CAAlB;AACAD,IAAAA,QAAQ,IAAI,CAACE,KAAK,KAAK,GAAV,GAAgB,EAAhB,GAAqB,CAACA,KAAvB,KAAiC,IAAID,CAArC,CAAZ;AACD;;AAED,SAAOD,QAAQ,GAAG,EAAX,KAAkB,CAAzB;AACD","sourcesContent":["import assertString from './util/assertString';\nvar issn = '^\\\\d{4}-?\\\\d{3}[\\\\dX]$';\nexport default function isISSN(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  assertString(str);\n  var testIssn = issn;\n  testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;\n  testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');\n\n  if (!testIssn.test(str)) {\n    return false;\n  }\n\n  var digits = str.replace('-', '').toUpperCase();\n  var checksum = 0;\n\n  for (var i = 0; i < digits.length; i++) {\n    var digit = digits[i];\n    checksum += (digit === 'X' ? 10 : +digit) * (8 - i);\n  }\n\n  return checksum % 11 === 0;\n}"]},"metadata":{},"sourceType":"module"}