{"ast":null,"code":"/**\n * Build RegExp object from an array\n * of multiple/multi-line regexp parts\n *\n * @param {string[]} parts\n * @param {string} flags\n * @return {object} - RegExp object\n */\nexport default function multilineRegexp(parts, flags) {\n  var regexpAsStringLiteral = parts.join('');\n  return new RegExp(regexpAsStringLiteral, flags);\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/util/multilineRegex.js"],"names":["multilineRegexp","parts","flags","regexpAsStringLiteral","join","RegExp"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;AACpD,MAAIC,qBAAqB,GAAGF,KAAK,CAACG,IAAN,CAAW,EAAX,CAA5B;AACA,SAAO,IAAIC,MAAJ,CAAWF,qBAAX,EAAkCD,KAAlC,CAAP;AACD","sourcesContent":["/**\n * Build RegExp object from an array\n * of multiple/multi-line regexp parts\n *\n * @param {string[]} parts\n * @param {string} flags\n * @return {object} - RegExp object\n */\nexport default function multilineRegexp(parts, flags) {\n  var regexpAsStringLiteral = parts.join('');\n  return new RegExp(regexpAsStringLiteral, flags);\n}"]},"metadata":{},"sourceType":"module"}