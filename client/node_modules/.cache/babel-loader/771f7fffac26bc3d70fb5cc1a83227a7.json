{"ast":null,"code":"import assertString from './util/assertString';\nvar macAddress = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){4}([0-9a-fA-F]{2})$/;\nvar macAddressNoSeparators = /^([0-9a-fA-F]){12}$/;\nvar macAddressWithDots = /^([0-9a-fA-F]{4}\\.){2}([0-9a-fA-F]{4})$/;\nexport default function isMACAddress(str, options) {\n  assertString(str);\n  /**\n   * @deprecated `no_colons` TODO: remove it in the next major\n  */\n\n  if (options && (options.no_colons || options.no_separators)) {\n    return macAddressNoSeparators.test(str);\n  }\n\n  return macAddress.test(str) || macAddressWithDots.test(str);\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/isMACAddress.js"],"names":["assertString","macAddress","macAddressNoSeparators","macAddressWithDots","isMACAddress","str","options","no_colons","no_separators","test"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,IAAIC,UAAU,GAAG,mEAAjB;AACA,IAAIC,sBAAsB,GAAG,qBAA7B;AACA,IAAIC,kBAAkB,GAAG,yCAAzB;AACA,eAAe,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,OAA3B,EAAoC;AACjDN,EAAAA,YAAY,CAACK,GAAD,CAAZ;AACA;AACF;AACA;;AAEE,MAAIC,OAAO,KAAKA,OAAO,CAACC,SAAR,IAAqBD,OAAO,CAACE,aAAlC,CAAX,EAA6D;AAC3D,WAAON,sBAAsB,CAACO,IAAvB,CAA4BJ,GAA5B,CAAP;AACD;;AAED,SAAOJ,UAAU,CAACQ,IAAX,CAAgBJ,GAAhB,KAAwBF,kBAAkB,CAACM,IAAnB,CAAwBJ,GAAxB,CAA/B;AACD","sourcesContent":["import assertString from './util/assertString';\nvar macAddress = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){4}([0-9a-fA-F]{2})$/;\nvar macAddressNoSeparators = /^([0-9a-fA-F]){12}$/;\nvar macAddressWithDots = /^([0-9a-fA-F]{4}\\.){2}([0-9a-fA-F]{4})$/;\nexport default function isMACAddress(str, options) {\n  assertString(str);\n  /**\n   * @deprecated `no_colons` TODO: remove it in the next major\n  */\n\n  if (options && (options.no_colons || options.no_separators)) {\n    return macAddressNoSeparators.test(str);\n  }\n\n  return macAddress.test(str) || macAddressWithDots.test(str);\n}"]},"metadata":{},"sourceType":"module"}