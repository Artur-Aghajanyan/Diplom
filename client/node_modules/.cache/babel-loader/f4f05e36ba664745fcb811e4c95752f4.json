{"ast":null,"code":"import assertString from './util/assertString';\nimport merge from './util/merge';\nvar lat = /^\\(?[+-]?(90(\\.0+)?|[1-8]?\\d(\\.\\d+)?)$/;\nvar _long = /^\\s?[+-]?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|\\d{1,2}(\\.\\d+)?)\\)?$/;\nvar latDMS = /^(([1-8]?\\d)\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|90\\D+0\\D+0)\\D+[NSns]?$/i;\nvar longDMS = /^\\s*([1-7]?\\d{1,2}\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|180\\D+0\\D+0)\\D+[EWew]?$/i;\nvar defaultLatLongOptions = {\n  checkDMS: false\n};\nexport default function isLatLong(str, options) {\n  assertString(str);\n  options = merge(options, defaultLatLongOptions);\n  if (!str.includes(',')) return false;\n  var pair = str.split(',');\n  if (pair[0].startsWith('(') && !pair[1].endsWith(')') || pair[1].endsWith(')') && !pair[0].startsWith('(')) return false;\n\n  if (options.checkDMS) {\n    return latDMS.test(pair[0]) && longDMS.test(pair[1]);\n  }\n\n  return lat.test(pair[0]) && _long.test(pair[1]);\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/isLatLong.js"],"names":["assertString","merge","lat","_long","latDMS","longDMS","defaultLatLongOptions","checkDMS","isLatLong","str","options","includes","pair","split","startsWith","endsWith","test"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,IAAIC,GAAG,GAAG,wCAAV;AACA,IAAIC,KAAK,GAAG,4DAAZ;AACA,IAAIC,MAAM,GAAG,8EAAb;AACA,IAAIC,OAAO,GAAG,qFAAd;AACA,IAAIC,qBAAqB,GAAG;AAC1BC,EAAAA,QAAQ,EAAE;AADgB,CAA5B;AAGA,eAAe,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,OAAxB,EAAiC;AAC9CV,EAAAA,YAAY,CAACS,GAAD,CAAZ;AACAC,EAAAA,OAAO,GAAGT,KAAK,CAACS,OAAD,EAAUJ,qBAAV,CAAf;AACA,MAAI,CAACG,GAAG,CAACE,QAAJ,CAAa,GAAb,CAAL,EAAwB,OAAO,KAAP;AACxB,MAAIC,IAAI,GAAGH,GAAG,CAACI,KAAJ,CAAU,GAAV,CAAX;AACA,MAAID,IAAI,CAAC,CAAD,CAAJ,CAAQE,UAAR,CAAmB,GAAnB,KAA2B,CAACF,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAR,CAAiB,GAAjB,CAA5B,IAAqDH,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAR,CAAiB,GAAjB,KAAyB,CAACH,IAAI,CAAC,CAAD,CAAJ,CAAQE,UAAR,CAAmB,GAAnB,CAAnF,EAA4G,OAAO,KAAP;;AAE5G,MAAIJ,OAAO,CAACH,QAAZ,EAAsB;AACpB,WAAOH,MAAM,CAACY,IAAP,CAAYJ,IAAI,CAAC,CAAD,CAAhB,KAAwBP,OAAO,CAACW,IAAR,CAAaJ,IAAI,CAAC,CAAD,CAAjB,CAA/B;AACD;;AAED,SAAOV,GAAG,CAACc,IAAJ,CAASJ,IAAI,CAAC,CAAD,CAAb,KAAqBT,KAAK,CAACa,IAAN,CAAWJ,IAAI,CAAC,CAAD,CAAf,CAA5B;AACD","sourcesContent":["import assertString from './util/assertString';\nimport merge from './util/merge';\nvar lat = /^\\(?[+-]?(90(\\.0+)?|[1-8]?\\d(\\.\\d+)?)$/;\nvar _long = /^\\s?[+-]?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|\\d{1,2}(\\.\\d+)?)\\)?$/;\nvar latDMS = /^(([1-8]?\\d)\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|90\\D+0\\D+0)\\D+[NSns]?$/i;\nvar longDMS = /^\\s*([1-7]?\\d{1,2}\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|180\\D+0\\D+0)\\D+[EWew]?$/i;\nvar defaultLatLongOptions = {\n  checkDMS: false\n};\nexport default function isLatLong(str, options) {\n  assertString(str);\n  options = merge(options, defaultLatLongOptions);\n  if (!str.includes(',')) return false;\n  var pair = str.split(',');\n  if (pair[0].startsWith('(') && !pair[1].endsWith(')') || pair[1].endsWith(')') && !pair[0].startsWith('(')) return false;\n\n  if (options.checkDMS) {\n    return latDMS.test(pair[0]) && longDMS.test(pair[1]);\n  }\n\n  return lat.test(pair[0]) && _long.test(pair[1]);\n}"]},"metadata":{},"sourceType":"module"}