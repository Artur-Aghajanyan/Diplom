{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport assertString from './util/assertString';\n/* eslint-disable prefer-rest-params */\n\nexport default function isLength(str, options) {\n  assertString(str);\n  var min;\n  var max;\n\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isLength(str, min [, max])\n    min = arguments[1] || 0;\n    max = arguments[2];\n  }\n\n  var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n  var len = str.length - surrogatePairs.length;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/isLength.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","assertString","isLength","str","options","min","max","arguments","surrogatePairs","match","len","length"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;;AAA2B,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE1X,OAAOK,YAAP,MAAyB,qBAAzB;AACA;;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,OAAvB,EAAgC;AAC7CH,EAAAA,YAAY,CAACE,GAAD,CAAZ;AACA,MAAIE,GAAJ;AACA,MAAIC,GAAJ;;AAEA,MAAIX,OAAO,CAACS,OAAD,CAAP,KAAqB,QAAzB,EAAmC;AACjCC,IAAAA,GAAG,GAAGD,OAAO,CAACC,GAAR,IAAe,CAArB;AACAC,IAAAA,GAAG,GAAGF,OAAO,CAACE,GAAd;AACD,GAHD,MAGO;AACL;AACAD,IAAAA,GAAG,GAAGE,SAAS,CAAC,CAAD,CAAT,IAAgB,CAAtB;AACAD,IAAAA,GAAG,GAAGC,SAAS,CAAC,CAAD,CAAf;AACD;;AAED,MAAIC,cAAc,GAAGL,GAAG,CAACM,KAAJ,CAAU,iCAAV,KAAgD,EAArE;AACA,MAAIC,GAAG,GAAGP,GAAG,CAACQ,MAAJ,GAAaH,cAAc,CAACG,MAAtC;AACA,SAAOD,GAAG,IAAIL,GAAP,KAAe,OAAOC,GAAP,KAAe,WAAf,IAA8BI,GAAG,IAAIJ,GAApD,CAAP;AACD","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport assertString from './util/assertString';\n/* eslint-disable prefer-rest-params */\n\nexport default function isLength(str, options) {\n  assertString(str);\n  var min;\n  var max;\n\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isLength(str, min [, max])\n    min = arguments[1] || 0;\n    max = arguments[2];\n  }\n\n  var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n  var len = str.length - surrogatePairs.length;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}"]},"metadata":{},"sourceType":"module"}