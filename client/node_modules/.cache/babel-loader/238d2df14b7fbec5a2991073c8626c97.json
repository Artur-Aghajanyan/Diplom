{"ast":null,"code":"import assertString from './util/assertString';\n/* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */\n\nvar dateFullYear = /[0-9]{4}/;\nvar dateMonth = /(0[1-9]|1[0-2])/;\nvar dateMDay = /([12]\\d|0[1-9]|3[01])/;\nvar timeHour = /([01][0-9]|2[0-3])/;\nvar timeMinute = /[0-5][0-9]/;\nvar timeSecond = /([0-5][0-9]|60)/;\nvar timeSecFrac = /(\\.[0-9]+)?/;\nvar timeNumOffset = new RegExp(\"[-+]\".concat(timeHour.source, \":\").concat(timeMinute.source));\nvar timeOffset = new RegExp(\"([zZ]|\".concat(timeNumOffset.source, \")\"));\nvar partialTime = new RegExp(\"\".concat(timeHour.source, \":\").concat(timeMinute.source, \":\").concat(timeSecond.source).concat(timeSecFrac.source));\nvar fullDate = new RegExp(\"\".concat(dateFullYear.source, \"-\").concat(dateMonth.source, \"-\").concat(dateMDay.source));\nvar fullTime = new RegExp(\"\".concat(partialTime.source).concat(timeOffset.source));\nvar rfc3339 = new RegExp(\"\".concat(fullDate.source, \"[ tT]\").concat(fullTime.source));\nexport default function isRFC3339(str) {\n  assertString(str);\n  return rfc3339.test(str);\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/isRFC3339.js"],"names":["assertString","dateFullYear","dateMonth","dateMDay","timeHour","timeMinute","timeSecond","timeSecFrac","timeNumOffset","RegExp","concat","source","timeOffset","partialTime","fullDate","fullTime","rfc3339","isRFC3339","str","test"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA;;AAEA,IAAIC,YAAY,GAAG,UAAnB;AACA,IAAIC,SAAS,GAAG,iBAAhB;AACA,IAAIC,QAAQ,GAAG,uBAAf;AACA,IAAIC,QAAQ,GAAG,oBAAf;AACA,IAAIC,UAAU,GAAG,YAAjB;AACA,IAAIC,UAAU,GAAG,iBAAjB;AACA,IAAIC,WAAW,GAAG,aAAlB;AACA,IAAIC,aAAa,GAAG,IAAIC,MAAJ,CAAW,OAAOC,MAAP,CAAcN,QAAQ,CAACO,MAAvB,EAA+B,GAA/B,EAAoCD,MAApC,CAA2CL,UAAU,CAACM,MAAtD,CAAX,CAApB;AACA,IAAIC,UAAU,GAAG,IAAIH,MAAJ,CAAW,SAASC,MAAT,CAAgBF,aAAa,CAACG,MAA9B,EAAsC,GAAtC,CAAX,CAAjB;AACA,IAAIE,WAAW,GAAG,IAAIJ,MAAJ,CAAW,GAAGC,MAAH,CAAUN,QAAQ,CAACO,MAAnB,EAA2B,GAA3B,EAAgCD,MAAhC,CAAuCL,UAAU,CAACM,MAAlD,EAA0D,GAA1D,EAA+DD,MAA/D,CAAsEJ,UAAU,CAACK,MAAjF,EAAyFD,MAAzF,CAAgGH,WAAW,CAACI,MAA5G,CAAX,CAAlB;AACA,IAAIG,QAAQ,GAAG,IAAIL,MAAJ,CAAW,GAAGC,MAAH,CAAUT,YAAY,CAACU,MAAvB,EAA+B,GAA/B,EAAoCD,MAApC,CAA2CR,SAAS,CAACS,MAArD,EAA6D,GAA7D,EAAkED,MAAlE,CAAyEP,QAAQ,CAACQ,MAAlF,CAAX,CAAf;AACA,IAAII,QAAQ,GAAG,IAAIN,MAAJ,CAAW,GAAGC,MAAH,CAAUG,WAAW,CAACF,MAAtB,EAA8BD,MAA9B,CAAqCE,UAAU,CAACD,MAAhD,CAAX,CAAf;AACA,IAAIK,OAAO,GAAG,IAAIP,MAAJ,CAAW,GAAGC,MAAH,CAAUI,QAAQ,CAACH,MAAnB,EAA2B,OAA3B,EAAoCD,MAApC,CAA2CK,QAAQ,CAACJ,MAApD,CAAX,CAAd;AACA,eAAe,SAASM,SAAT,CAAmBC,GAAnB,EAAwB;AACrClB,EAAAA,YAAY,CAACkB,GAAD,CAAZ;AACA,SAAOF,OAAO,CAACG,IAAR,CAAaD,GAAb,CAAP;AACD","sourcesContent":["import assertString from './util/assertString';\n/* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */\n\nvar dateFullYear = /[0-9]{4}/;\nvar dateMonth = /(0[1-9]|1[0-2])/;\nvar dateMDay = /([12]\\d|0[1-9]|3[01])/;\nvar timeHour = /([01][0-9]|2[0-3])/;\nvar timeMinute = /[0-5][0-9]/;\nvar timeSecond = /([0-5][0-9]|60)/;\nvar timeSecFrac = /(\\.[0-9]+)?/;\nvar timeNumOffset = new RegExp(\"[-+]\".concat(timeHour.source, \":\").concat(timeMinute.source));\nvar timeOffset = new RegExp(\"([zZ]|\".concat(timeNumOffset.source, \")\"));\nvar partialTime = new RegExp(\"\".concat(timeHour.source, \":\").concat(timeMinute.source, \":\").concat(timeSecond.source).concat(timeSecFrac.source));\nvar fullDate = new RegExp(\"\".concat(dateFullYear.source, \"-\").concat(dateMonth.source, \"-\").concat(dateMDay.source));\nvar fullTime = new RegExp(\"\".concat(partialTime.source).concat(timeOffset.source));\nvar rfc3339 = new RegExp(\"\".concat(fullDate.source, \"[ tT]\").concat(fullTime.source));\nexport default function isRFC3339(str) {\n  assertString(str);\n  return rfc3339.test(str);\n}"]},"metadata":{},"sourceType":"module"}