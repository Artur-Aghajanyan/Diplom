{"ast":null,"code":"import assertString from './util/assertString';\nimport multilineRegexp from './util/multilineRegex';\n/**\n * Regular Expression to match\n * semantic versioning (SemVer)\n * built from multi-line, multi-parts regexp\n * Reference: https://semver.org/\n */\n\nvar semanticVersioningRegex = multilineRegexp(['^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)', '(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*))*))', '?(?:\\\\+([0-9a-z-]+(?:\\\\.[0-9a-z-]+)*))?$'], 'i');\nexport default function isSemVer(str) {\n  assertString(str);\n  return semanticVersioningRegex.test(str);\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/isSemVer.js"],"names":["assertString","multilineRegexp","semanticVersioningRegex","isSemVer","str","test"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,uBAAuB,GAAGD,eAAe,CAAC,CAAC,gDAAD,EAAmD,yFAAnD,EAA8I,0CAA9I,CAAD,EAA4L,GAA5L,CAA7C;AACA,eAAe,SAASE,QAAT,CAAkBC,GAAlB,EAAuB;AACpCJ,EAAAA,YAAY,CAACI,GAAD,CAAZ;AACA,SAAOF,uBAAuB,CAACG,IAAxB,CAA6BD,GAA7B,CAAP;AACD","sourcesContent":["import assertString from './util/assertString';\nimport multilineRegexp from './util/multilineRegex';\n/**\n * Regular Expression to match\n * semantic versioning (SemVer)\n * built from multi-line, multi-parts regexp\n * Reference: https://semver.org/\n */\n\nvar semanticVersioningRegex = multilineRegexp(['^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)', '(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*))*))', '?(?:\\\\+([0-9a-z-]+(?:\\\\.[0-9a-z-]+)*))?$'], 'i');\nexport default function isSemVer(str) {\n  assertString(str);\n  return semanticVersioningRegex.test(str);\n}"]},"metadata":{},"sourceType":"module"}