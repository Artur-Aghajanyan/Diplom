{"ast":null,"code":"import assertString from './util/assertString';\nexport default function matches(str, pattern, modifiers) {\n  assertString(str);\n\n  if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n    pattern = new RegExp(pattern, modifiers);\n  }\n\n  return pattern.test(str);\n}","map":{"version":3,"sources":["/home/artur97/Diplomayin/client/node_modules/validator/es/lib/matches.js"],"names":["assertString","matches","str","pattern","modifiers","Object","prototype","toString","call","RegExp","test"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,eAAe,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,OAAtB,EAA+BC,SAA/B,EAA0C;AACvDJ,EAAAA,YAAY,CAACE,GAAD,CAAZ;;AAEA,MAAIG,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,OAA/B,MAA4C,iBAAhD,EAAmE;AACjEA,IAAAA,OAAO,GAAG,IAAIM,MAAJ,CAAWN,OAAX,EAAoBC,SAApB,CAAV;AACD;;AAED,SAAOD,OAAO,CAACO,IAAR,CAAaR,GAAb,CAAP;AACD","sourcesContent":["import assertString from './util/assertString';\nexport default function matches(str, pattern, modifiers) {\n  assertString(str);\n\n  if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n    pattern = new RegExp(pattern, modifiers);\n  }\n\n  return pattern.test(str);\n}"]},"metadata":{},"sourceType":"module"}